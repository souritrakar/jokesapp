{"version":3,"sources":["logopic.png","Meme.jsx","Memepage.jsx","Joke.jsx","Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Meme","props","className","href","hrefsrc","target","onMouseEnter","enter","onMouseLeave","exit","src","imgsrc","alt","Memepage","state","mode","memes","hovertime","fetch","then","res","json","response","console","log","data","setState","jokepic","style","color","this","map","meme","url","topcaption","downcaption","React","Component","Joke","joke","Home","fetchApi","a","hasPressedButton","headers","hasLoadedJoke","memepic","isMemeMode","isjokeMode","hasLoadedMeme","loaded","class","align","to","rel","onClick","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed434513.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logopic.39bae7cc.png\";","import React from \"react\"\n\nexport default function Meme(props){\n    return(\n        <div className=\"memecard\">\n       \n           <a href={props.hrefsrc} target=\"_blank\"> <img  onMouseEnter={props.enter}\n    onMouseLeave={props.exit}className=\"memeimg\"src={props.imgsrc} alt=\"img\"/>\n    </a>\n  \n    <br></br>\n    <br></br>\n\n        </div>\n    )\n}","import React from \"react\"\nimport jokepic from \"./logopic.png\"\nimport \"./App.css\"\nimport {BrowserRouter,Link,Route,Switch} from \"react-router-dom\"\nimport Meme from \"./Meme\"\nexport default class Memepage extends React.Component{\n    constructor(){\n        super()\n        this.state={\n            mode:\"Meme\",\n            memes:[],\n            hovertime:0\n        }\n    }\n    async componentDidMount(){\n      await fetch(\"https://api.imgflip.com/get_memes\").then(res=>res.json()).then(response=>{\n        console.log(response.data.memes)\n        this.setState({memes:response.data.memes})\n      })\n    }\n\n   \n\n    render(){\n      var hovertimes=0\n        return(\n         \n            <header className=\"darkmode\">\n     <h1 className=\"randomgen\"> Meme Templates!</h1>\n     <img className=\"jokepic\" src={jokepic} alt=\"jokepic\"/>\n     <h2 style={{color:\"lightseagreen\"}}>Choose from the most popular Meme Templates and make memes!</h2>\n     <h3 style={{color:\"lightblue\"}}>ONLY TEMPLATES AVAILABLE NOW. CLICK/SAVE IMAGE AND MAKE YOUR OWN MEME INSTEAD OF HAVING TO SEARCH.GENERATOR UNDER PROGRESS</h3>\n     <br></br>\n  <h3 style={{color:\"red\"}}>Mode: {this.state.mode}</h3>\n  <br></br>\n  \n{\n  this.state.memes &&\n  this.state.memes.map(meme=>{\n    return(\n    <Meme   hrefsrc={meme.url} imgsrc={meme.url} topcaption=\"TOP TEXT HERE\" downcaption=\"BOTTOM TEXT HERE\" />\n    )\n  })\n}\n  <br></br>\n\n  <h1 style={{color:\"#F37335\"}}>© Souritra Kar 2020</h1>\n      </header>\n   \n        )\n    }\n}","import React from \"react\"\n \nexport default function Joke(props){\n    return(\n        <div className=\"jokescard\">\n            <h2>{props.joke}</h2>\n        </div>\n    )\n}","\nimport './App.css';\nimport React from \"react\"\nimport jokepic from \"./logopic.png\"\nimport Joke from \"./Joke\"\nimport {BrowserRouter,Link,Route,Switch} from \"react-router-dom\"\n\nclass Home extends React.Component {\n  constructor(){\n    super()\n    this.state={\n      joke:\"\",\n      memepic:\"\",\n      meme:\"\",\n      isMemeMode:false,\n      isjokeMode:true,\n      hasLoadedJoke:false,\n      hasLoadedMeme:false,\n      hasPressedButton:false,\n      mode:\"Joke\"\n      \n    }\n  }\n\nfetchApi = async () =>{\n\n  // var randomnumber= Math.floor(Math.random()*10)\n  // console.log(randomnumber)\n  this.setState({hasPressedButton:true})\n  console.log(\"inside func\")\n\n  await fetch(\"https://icanhazdadjoke.com\",{\n    headers:{\n      'Accept':'application/json'\n    }\n  }).then(res=>res.json()).then(response=>{\n    console.log(response)\n  console.log(response.joke)\n   this.setState({joke:response.joke})\n this.setState({hasLoadedJoke:true})\n \n \n  })\n\n\n  \n\n\n\n\n \n}\n\n  render(){\nvar loaded;\nif(this.state.hasLoadedJoke===false && this.state.hasPressedButton===true){\n  loaded=<h2 style={{color:\"green\"}}>Loading...</h2>\n}\n  return (\n  \n    <div className=\"App\">\n        <header className=\"App-header\">\n      <h1 className=\"randomgen\">Random Joke/Roast/Humour/Meme Templates!</h1>\n      <img className=\"jokepic\" src={jokepic} alt=\"jokepic\"/>\n      <h2 style={{color:\"lightseagreen\"}}>Get your jokes and random humour!</h2>\n \n    <h3 style={{color:\"red\"}}>Mode: {this.state.mode}</h3>\n    <br></br>\n    <div class=\"button_cont\" align=\"center\"><Link to=\"/memetemplates\" target=\"_blank\" ><a class=\"example_a\" rel=\"nofollow noopener\">MEME TEMPLATES</a></Link></div>\n<br></br>\n\n    <div  onClick={()=>{this.fetchApi()}}class=\"button_cont\" align=\"center\"><a class=\"example_a\" rel=\"nofollow noopener\">GENERATE JOKE</a></div>\n{loaded}\n    {\n      this.state.mode===\"Joke\" && this.state.hasLoadedJoke===true && this.state.hasPressedButton &&\n      (\n        <Joke joke={this.state.joke}/>\n      )\n    }\n    <h1 style={{color:\"#F37335\"}}>© Souritra Kar 2020</h1>\n    <h2 style={{color:\"green\"}}> Check out my Quotes App: <a href=\"http://souritrakar.github.io/quotesapp\">Quotes App</a></h2>\n    <h2 style={{color:\"#544a7d\"}}> Check out my Movie Search App: <a href=\"https://souritrakar.github.io/movieappfinal/\">Movie App</a></h2>\n        </header>\n    </div>\n  \n  );\n}\n}\n\nexport default Home;\n","import Memepage from \"./Memepage\"\nimport './App.css';\nimport React from \"react\"\nimport jokepic from \"./logopic.png\"\nimport Joke from \"./Joke\"\nimport {BrowserRouter,Link,Route,Switch,Redirect} from \"react-router-dom\"\nimport Home from \"./Home\"\n\n\nclass App extends React.Component {\n  \n\n  render(){\n\n\n\n  return (\n    \n \n    <div className=\"App\">\n      \n      <BrowserRouter>\n\n\n    <Route exact path=\"/jokesapp\" component={Home}/>\n   \n  \n      <Route  exact path=\"/meme-emplates\" component={Memepage}/>\n\n\n    \n\n\n      </BrowserRouter>\n\n    </div>\n\n     \n    \n \n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}